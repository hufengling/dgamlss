% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dgamlss_RS.R
\name{dgamlss_RS}
\alias{dgamlss_RS}
\title{Local site: dgamlss analog of the gamlss() function}
\usage{
dgamlss_RS(
  formula = formula(data),
  sigma.formula = ~1,
  nu.formula = ~1,
  tau.formula = ~1,
  family = NO(),
  data,
  weights = NULL,
  contrasts = NULL,
  dgamlss.update,
  get_penalty_metric = NULL,
  proposed_coef_list = NULL,
  control = gamlss.control(),
  i.control = glim.control()
)
}
\arguments{
\item{formula}{mu formula}

\item{sigma.formula}{sigma formula}

\item{nu.formula}{nu formula}

\item{tau.formula}{tau formula}

\item{family}{family from gamlss.dist}

\item{data}{local data}

\item{weights}{weights}

\item{contrasts}{See gamlss() function.}

\item{dgamlss.update}{Current update from dgamlss_send_coefs()}

\item{get_penalty_metric}{Get penalty metric for empirical penalty selection for GCV or GAIC. Options are GCV or GAIC. Only useful for penalized smooth term fitting, after getting a set of proposed coefficients under various penalties. Default NULL.}

\item{proposed_coef_list}{List of proposed coefficients across a grid of lambda penalties, sent from central site. Use with get_penalty_metric = GCV or get_penalty_metric = GAIC}

\item{control}{See gamlss() function.}

\item{i.control}{See gamlss() function.}
}
\value{
Communication object: Summary statistics for the site that should be sent to the central site. Central site can aggregate dgamlss_RS outputs using dgamlss_aggregate_coef()
}
\description{
Local site: dgamlss analog of the gamlss() function
}
\examples{
\dontrun{
# To update the "mu" coefficients
data(abdom)
site1_data <- abdom[1:110, ]
site2_data <- abdom[111:610, ]
current_update <- dgamlss_send_coefs(to_update = "mu", mu.coef = c(10, 1, 2),
sigma.coef = c(4, 3), nu.coef = 2, tau.coef = 1)
site1_update <- dgamlss_RS(formula = y ~ x1 + x2, sigma.formula = ~ x,
nu.formula = ~ 1, tau.formula = ~ 1, family = BCT, data = site1_data,
dgamlss.update = current_update)
site2_update <- dgamlss_RS(formula = y ~ x1 + x2, sigma.formula = ~ x,
nu.formula = ~ 1, tau.formula = ~ 1, family = BCT, data = site2_data,
dgamlss.update = current_update)
pooled_update <- dgamlss_aggregate_coef(list(site1_update, site2_update))
}
}
