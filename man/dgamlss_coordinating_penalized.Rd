% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dgamlss_coordinating_penalized.R
\name{dgamlss_coordinating_penalized}
\alias{dgamlss_coordinating_penalized}
\title{Simulation: End-to-end coordinating function for distributed GAMLSS model fitting with automated penalty selection.}
\usage{
dgamlss_coordinating_penalized(
  mu.formula,
  sigma.formula = "~ 1",
  nu.formula = "~ 1",
  tau.formula = "~ 1",
  family = NO(),
  weights = NULL,
  contrasts = NULL,
  local_site_data,
  site_data,
  all_inits = NULL,
  coef_crit = 0.01,
  lambda_list = NULL,
  penalty_matrix_list = NULL,
  method = c("GAIC", "GCV"),
  k = 2,
  is_orthogonal = FALSE,
  basis_sizes = NULL,
  verbose = FALSE,
  ...
)
}
\arguments{
\item{mu.formula}{Formula for the mu component of the GAMLSS model.}

\item{sigma.formula}{Formula for the sigma component of the GAMLSS model.}

\item{nu.formula}{Formula for the nu component of the GAMLSS model.}

\item{tau.formula}{Formula for the tau component of the GAMLSS model.}

\item{family}{GAMLSS family object specifying the distribution and link functions.}

\item{weights}{Optional weights for likelihood analysis.}

\item{contrasts}{Optional contrasts for model parameters.}

\item{local_site_data}{Data from central site. Used to set up initial values for some GAMLSS distributions.}

\item{site_data}{List of data frames containing local datasets.}

\item{all_inits}{Optional named list containing initial values for all coefficients.}

\item{coef_crit}{Convergence criterion for coefficient changes.}

\item{lambda_list}{Named list of fixed lambdas, if fixed penalty smooth terms are desired. Names must be "mu", "sigma", "nu", and "tau".}

\item{penalty_matrix_list}{Named list of penalty matrices, output from dgamlss_bs(). Names must be "mu", "sigma", "nu", and "tau".}

\item{method}{Option to use either GAIC or GCV for automated penalty selection.}

\item{k}{GAIC multiplier for automated penalty selection. AIC uses k = 2. BIC uses k = log(n). Higher k corresponds to stronger penalty.}

\item{is_orthogonal}{TRUE/FALSE indicator of whether the dgamlss_bs() output was orthogonalized or not.}

\item{basis_sizes}{Vector of number of basis functions for each spline. Must be length 4.}

\item{verbose}{TRUE/FALSE for verbosity.}

\item{...}{Additional arguments to be passed to the underlying GAMLSS fitting function.

Simulates dgamlss fitting between a central site and all local sites. Only summary statistics are passed from local sites. The central site then aggregates local summary statistics and sends back pooled updates.}
}
\value{
A list containing pooled coefficients, number of communications, number of reduced updates, and global deviance.
}
\description{
Simulation: End-to-end coordinating function for distributed GAMLSS model fitting with automated penalty selection.
}
\examples{

\dontrun{
data(abdom)
site1_data <- abdom[1:110, ]
site2_data <- abdom[111:610, ]
site_data <- list(site1_data, site2_data)
site1_gamlss <- gamlss(mu.formula = y ~ x1 + x2, sigma.formula = ~ x1,
nu.formula = ~ 1, tau.formula = ~ 1, family = BCT, data = site1_data)
result <- dgamlss_coordinating(mu.formula = y ~ x1 + x2,
sigma.formula = ~ x1, nu.formula = ~ 1, tau.formula = ~ 1,
family = BCT, site_data, all_inits = dgamlss_get_inits(site1_gamlss))
}
}
